

//--------------------------------------------------------------------------------------------------
//  GenetronBasicEconomy
//--------------------------------------------------------------------------------------------------
void GenetronBasicEconomy (int player, int tier, int minWorkers) {
    int econMin = AIGetMinPeonCount(player, c_townMax);
    if (minWorkers > econMin) {
        minWorkers = econMin;
    }

    AIDefaultEconomy(player, c_GB_ProcessingCore, c_GB_FilteringPlant, c_GB_Node, c_GU_ACR, minWorkers, c_stockAlways);
}

//--------------------------------------------------------------------------------------------------
//  GenetronBasicExpansion
//--------------------------------------------------------------------------------------------------
void GenetronBasicExpansion (int player, int tier, int minerals, int gas) {
    AIDefaultExpansion(player, c_GB_ProcessingCore, minerals, gas, c_expandDefault);
}

//--------------------------------------------------------------------------------------------------
//  GenetronGeneralBuild
//--------------------------------------------------------------------------------------------------
void GenetronGeneralBuild (int player, int tier) {
    if (tier >= c_ldPhaseMid) {
        if (PlayerBeaconIsSet(player, c_beaconDetect)) {
            AISetStock( player, 1, c_GU_Processor );
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  GenetronMacroExpand
//--------------------------------------------------------------------------------------------------
bool GenetronMacroExpand (int player) {
    fixed defenseEval = 0;

    if (AITechCount(player, c_GU_ACR, c_techCountQueuedOrBetter) < 14) {
        return false;
    }
    if (AITechCount(player, c_GB_ProcessingCore, c_techCountQueuedOrBetter) >= 2) {
        return false;
    }
    
    defenseEval = AISelfDefenseThreatEval(c_dtRealSelfThreat, player);
    if (defenseEval >= 120) {
        // don't expand if currently under attack
        return false;
    }

    if (!AIIsExpandingOrHasExpanded(player)) {
        if (!AIHasNearbyOpenExpansion(player)) {
            return false;
        }
        if (!AIHasRes(player,300,0)) {
            AIEnableStock(player);
            return true;
        }

        // we should try to expand
        AIExpand(player, AIGetTownLocation(player, c_townMain), c_GB_ProcessingCore);
    }

    // currently expanding see if we need to save minerals
    if (!AIHasRes(player,500,0)) {
        AIEnableStock(player);
        return true;
    }
    return false; // already saved enough, we're allowed to continure the stock
}

//--------------------------------------------------------------------------------------------------
//  GenetronAtEachTown
//--------------------------------------------------------------------------------------------------
void GenetronAtEachTown (int player, int tier) {
    int i = 0;
    int town;

    while (i < c_townMax) {
        town = i;
        i = i + 1;

        if (AIGetTownState(player, town) != c_townStateEstablished) {
            continue;
        }

        if (AIGetBuildingCountInTown(player, town, c_GB_ProcessingCore, c_techCountCompleteOnly) < 1) {
            continue;
        }

        if (AIGetBuildingCountInTown(player, town, c_GB_Interdictor_Alias, c_techCountCompleteOnly) < 2) {
            AISetStockEx(player, town, 2, c_GB_Interdictor_Alias, c_makeResourceDefense | c_nearDropoff, 0);
            continue;
        }
        if (AIGetBuildingCountInTown(player, town, c_GB_Repulsor_Alias, c_techCountCompleteOnly) < 1) {
            AISetStockEx(player, town, 1, c_GB_Repulsor_Alias, c_makeResourceDefense | c_nearDropoff, 0);
            continue;
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  GenetronTechUp
//--------------------------------------------------------------------------------------------------
void GenetronTechUp (int player, int tier) {
    int diff = AIPlayerDifficulty(player);

    if (diff < c_skirMedium) {
        // don't build extra buildings below medium
        return;
    }

    AISetStock( player, 2, c_GB_FilteringPlant );
    AISetStock( player, 1, c_GB_Manufacturer );
    AISetStock( player, 2, c_GB_Uploader );
    AISetStock( player, 1, c_GB_OutfittingStation );

    if (tier >= c_ldPhaseMid) {
        GenetronAtEachTown(player, tier);
        AISetStock( player, 1, c_GB_Fabricator );
        AISetStock( player, 1, c_GB_TechVault );
        AISetStock( player, 1, c_GB_AssemblyArray );
        AISetStock( player, 3, c_GB_Manufacturer );
        AISetStock( player, 12, c_GB_Uploader );

        if (tier >= c_ldPhaseLate) {
            AISetStock( player, 1, c_GB_AnalysisTerminal );
            AISetStock( player, 2, c_GB_OutfittingStation );
            AISetStock( player, 2, c_GB_TechVault );
            AISetStock( player, 2, c_GB_AssemblyArray );
            AISetStock( player, 18, c_GB_Uploader );
        }
    }
}


//--------------------------------------------------------------------------------------------------
//  GenetronBasicDefenseStock
//--------------------------------------------------------------------------------------------------
void GenetronBasicDefenseStock (int player) {
    if (!AINeedsDefending(player)) {
        return;
    }
    
    AISetStockFarms( player, c_GB_Node, c_stockNormalFarms);
    AIAddEmergencyDefenseStock(player, 4, c_GU_Spitfire, false);
    AISetStock( player, 1, c_GB_FilteringPlant );
    AIAddEmergencyDefenseStock(player, 4, c_GU_Hornet, true);
    AIAddEmergencyDefenseStock(player, 2, c_GU_Torrent, true);
    AIAddEmergencyDefenseStock(player, 4, c_GU_Blitzer, true);
    AIAddEmergencyDefenseStock(player, 20, c_GU_ACR, true);
}
